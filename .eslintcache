[{"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/index.js":"1","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/reportWebVitals.js":"2","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/App.js":"3","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/containers/OwlDashboard.js":"4","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/RecentObservationsList.js":"5","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/Sighting.js":"6","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/Header.js":"7","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/Footer.js":"8","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/SightingMap.js":"9","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/containers/secrets.js":"10","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/LoadingOwl.js":"11"},{"size":500,"mtime":1609080837594,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609080837596,"results":"14","hashOfConfig":"13"},{"size":285,"mtime":1618082215399,"results":"15","hashOfConfig":"13"},{"size":1135,"mtime":1618082215406,"results":"16","hashOfConfig":"13"},{"size":1989,"mtime":1618082215404,"results":"17","hashOfConfig":"13"},{"size":1388,"mtime":1609701714498,"results":"18","hashOfConfig":"13"},{"size":233,"mtime":1618082215403,"results":"19","hashOfConfig":"13"},{"size":438,"mtime":1609758211098,"results":"20","hashOfConfig":"13"},{"size":1294,"mtime":1618082215405,"results":"21","hashOfConfig":"13"},{"size":36,"mtime":1610276118742,"results":"22","hashOfConfig":"13"},{"size":383,"mtime":1618082215403,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"f9nsi8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/index.js",[],["50","51"],"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/reportWebVitals.js",[],"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/App.js",[],"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/containers/OwlDashboard.js",["52"],"import {useState, useEffect} from \"react\";\nimport RecentObservationsList from \"../components/RecentObservationsList\";\nimport {myKey} from \"./secrets\";\n\nfunction OwlDashboard() {\n    const [recentObservations, setRecentObservations] = useState([]);\n\n    let myHeaders = new Headers();\n    myHeaders.append(\"X-eBirdApiToken\", myKey);\n\n    let requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n\n    useEffect(() => {\n        let myPromise = fetch(\"https://api.ebird.org/v2/data/obs/GB-SCT/recent?back=30\", requestOptions)\n        myPromise.then(response => response.json())\n        .then(data => {\n            console.log(\"Getting data...\")\n            console.log(data)\n            setRecentObservations(data);\n            // console.log(recentObservations);\n            \n        })\n        .catch(error => console.log(\"error\", error))\n\n    }, []);\n\n    return (\n    <>\n        <RecentObservationsList recentObservations={recentObservations}/>\n    </>\n );\n}\n\nexport default OwlDashboard;","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/RecentObservationsList.js",["53"],"import Sighting from \"./Sighting\";\nimport SightingMap from \"./SightingMap.js\"\nimport { useState } from 'react';\n\nfunction RecentObservationsList({recentObservations}) {\n    if (!recentObservations) return null;\n    const owls =  recentObservations.filter(bird => bird.comName.includes(\"Owl\"));\n    console.log(\"Here are the owls:\");\n    console.log(owls);\n\n    const totalRecentObservations = recentObservations.length;\n    const totalOwls = owls.length;\n\n    const owlStat = totalRecentObservations / totalOwls;\n    const displayStat = Math.ceil(owlStat);\n\n    const owlDetails = owls.map(owl => {\n        return (\n                <Sighting\n                    name = {owl.comName}\n                    sciName = {owl.sciName}\n                    location = {owl.locName}\n                    date = {owl.obsDt}\n                    number = {owl.howMany}\n                    key = {owl.subId} \n                />\n        );\n    });\n\n    return (\n        <>\n            <section className=\"container\">\n                <div className=\"title\">\n                    <h2>Did you know?</h2>\n                </div>\n                <div className=\"stats\">\n                    <div>\n                        <h3>{totalRecentObservations}</h3>\n                        <p>different species of bird have been spotted in Scotland in the last 30 days.</p>\n                    </div>\n                    <div>\n                        <h3>1 in every {displayStat}</h3>\n                        <p>of these sightings was an owl.</p>\n                    </div>\n                </div>\n            </section>\n            <section className=\"container\" className=\"recent-sightings\">\n                <div className=\"title\">\n                    <h2>Recent owl sightings in Scotland</h2>\n                </div>\n                <div className=\"sightings-container\">\n                    {owlDetails}\n                </div>\n            </section>\n            <section className=\"container\">\n                <SightingMap owls={owls}/>\n            </section>\n        </>\n    )\n}\n\nexport default RecentObservationsList;","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/Sighting.js",[],"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/Header.js",[],"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/Footer.js",[],"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/SightingMap.js",["54","55"],"import React, { useState } from 'react';\nimport { Popup, MapContainer as Map, TileLayer, Marker } from 'react-leaflet';\nimport Sighting from \"./Sighting\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst SightingMap = ({ owls }) => {\n  const [currentLocation, setCurrentLocation] = useState({ lat: 56.4906712, lng: -4.2026458 });\n  const [zoom, setZoom] = useState(7);\n  const markerIcon = L.icon({\n    // some generic icon from google\n    iconUrl: \"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\", \n    iconSize: [35, 35] \n  });\n\n  const owlMarkers = owls.map((owl, index) => {\n    return (\n      <Marker key={index} position={[owl.lat, owl.lng]} icon={markerIcon} >\n        <Popup>\n          <Sighting\n            name={owl.comName}\n            sciName={owl.sciName}\n            location={owl.locName}\n            date={owl.obsDt}\n            number={owl.howMany}\n            key={owl.subId}\n          />\n        </Popup>\n      </Marker>\n    )\n  })\n\n  return (\n    <Map center={currentLocation} zoom={zoom}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {owlMarkers}\n    </Map>\n  );\n}\n\nexport default SightingMap;\n","/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/containers/secrets.js",[],"/Users/lauradobie/codeclan_work/christmas_break/bird_app/owl_watch/src/components/LoadingOwl.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":29,"column":8,"nodeType":"62","endLine":29,"endColumn":10,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":44,"column":44,"nodeType":"66","endLine":44,"endColumn":72},{"ruleId":"67","severity":1,"message":"68","line":9,"column":27,"nodeType":"69","messageId":"70","endLine":9,"endColumn":45},{"ruleId":"67","severity":1,"message":"71","line":10,"column":16,"nodeType":"69","messageId":"70","endLine":10,"endColumn":23},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestOptions'. Either include it or remove the dependency array.","ArrayExpression",["74"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'setCurrentLocation' is assigned a value but never used.","Identifier","unusedVar","'setZoom' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [requestOptions]",{"range":"77","text":"78"},[901,903],"[requestOptions]"]